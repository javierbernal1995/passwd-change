---
- hosts: all
############################VARIABLES##################################
  vars:
    users:
      - username: "adan.marin"
        groups: "adan.marin"
        publica: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDmbP6BJHS4YFKLtENn6HVJfLP3CzdRnTLMLPW65uXrw3PKJEFT/ymOc2AsIGGifnMg3I55+RGgzeeWq1XYLVFvBy46wnROf1H2hmIyOLq3XrQ6+mWnHpU663MhVzO477AUTk3z9EkyaLgK3fHIdlGCb9yyE5bAAgouv1m7psmTPQdEcb49rqpViyc7bk+UNDVGfI/o5bLETetz5e386rdTcKTgTqC0XU2rM+DD/ujdWdo70oBjfsqzHa/6vTiwseGyH8LDtejl+W49ZpzBh0h5lVnzUk50xMebCgXCTC4AEGu123G07wXr2Iqie7gHIJjoPJQbs0zzXBJbOiCSHXnf adan.marin@Zevenet"
      - username: "emilio.campos"
        groups: "emilio.campos"
        publica: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCosQwU/OBjiKS62VIT1+T4tZufzHY5TtmTC9PmI5EeeAldoFkkBOE2cPSEhBuhP6CvMVG2hn4aofzWeyFUtB4k3IHLaRNSkQ+RSB7B4sX+pT8I8ModcMshlAEoaZ9LwOYXFS8xlzG3jvUbdwwr1s6+XcN8FZT+qzLr5SoCJP1MFKJQ5+1eYlMHupCG2HDYVE7JbCPJsRtWYDcZ0DZr5nYNDwObu7V3cnvG6j6Elts41mHDQ/HOym8dTV2XsTn4CufUvUJD7Zr6EwPOAL+JFPuyJkdvCW5lSchk2fs55O61QZxlrJJT4Hm7NCd7nBNLxkkYT6g7LzI7hW739ZVatIi/ emilio.campos@Zevenet"
    grupo:
      - group: "adan.marin"
      - group: "emilio.campos"



#####################################################################
  tasks:
##################INSTALACIÓN DE SUDO
  - name: install sudo
    apt: name=sudo update_cache=yes state=latest
#####################CREAR GRUPOS MEDIANTE VARIABLE.###########
######CREA TODOS LOS GRUPOS QUE ESTÁN EN LA VARIABLE GROUP.###################
  - name: create groups 
    group: 
      name: "{{ item.group }}"
    with_items: 
      "{{ grupo }}"
####################CREA USUARIOS QUE ESTÁN EN LA VARIABLE  USERS CON LOS ATRIBUTOS DE CADA UNO DE LOS USERNAME
#######################VAMOS AÑADIENDO ITEMS POR CADA USUARIO DIFERENTE
#######################REALIZAMOS UN BUCLE QUE VA COGIENDO CADA ATRIBUTO = VALOR QUE HEMOS AÑADIDO
  - name: create users with groups, shell and password.
    user:
      name: "{{ item.username }}"
      group: "{{ item.groups }}"
      shell: /bin/bash
      groups: sudo
      append: yes
    with_items:
      "{{ users }}"
  - name: authorized_keys
    authorized_key:
      user: "{{ item.username }}"
      state: present
      key: "{{ item.publica }}"
    with_items:
      "{{ users }}"
    
############################DIRECTIVAS PARA EL FICHERO ETC/SSH/SSHD_CONFIG
  - name: Disable root login
    lineinfile: dest=/etc/ssh/sshd_config regexp='^PermitRootLogin' line="PermitRootLogin prohibit-password" state=present
  - name: Disable password authentication
    lineinfile: dest=/etc/ssh/sshd_config regexp='^#PasswordAuthentication' line="PasswordAuthentication no" state=present
  - name: Enable PAM
    lineinfile: dest=/etc/ssh/sshd_config regexp='^UsePAM' line="UsePAM yes" state=present
  - name: Disable challenge response authentication
    lineinfile: dest=/etc/ssh/sshd_config regexp='^ChallengeResponseAuthentication' line="ChallengeResponseAuthentication no" state=present
  - name: Enable pubkey authentication
    lineinfile: dest=/etc/ssh/sshd_config regexp='^#PubkeyAuthentication' line="PubkeyAuthentication yes" state=present
  - name: Restart SSH service
    service: name=sshd state=restarted
############### Modificar etc profile.d para hacer modo auditoría  
  - name: Mover archivo bashrc al directorio /etc/profile.d/
    copy: src=/root/Script/bashrc.sh dest=/etc/profile.d/ 
######################## Módulo de iptables genéricas, según hostname y según grupo externo e interno
#  - name: Ejecutar script en todas las máquinas
#    script: /root/principal.sh
#    
#- hosts: interno
#  tasks:
#  - name: Ejecutar script en máquinas internas
#    script: /root/interno.sh
#    
#- hosts: externo
#  tasks:
#  - name: Ejecutar script en máquinas externas
#    script: /root/externo.sh
